/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bricks;

import java.awt.Image;
import java.util.List;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.SwingUtilities;


/** *
 * 
 */
public class Game extends javax.swing.JFrame implements KeyListener {
    private JLabel platform;
    private List<JLabel> bricks;
    private BallPanel bp;
    
    public Game(/*BallPanel bp*/) {
        
        initComponents();
        this.bp=new BallPanel();
        this.bp.setVisible(true);
        //this.bp= bp;
        this.setSize(1026,630);      
        
        Path resourceDirectory = Paths.get("src","resources");
        String absolutePath = resourceDirectory.toFile().getAbsolutePath();
        Image bgimg = new ImageIcon(absolutePath+"/bgImage.PNG").getImage();
        //JPanelWithBackground bgPanel = new JPanelWithBackground(bgimg);
        //bgPanel.setBounds(0,0,1026,630);
        bp.setBounds(0,0, 1026,630);
        bricks = new  ArrayList<>();
        bp.setLayout(null);
        for(int i = 0; i<25;i++) {
            JLabel b = new JLabel(new ImageIcon(absolutePath+"/br"+(i%3)+".PNG"));
//            b.setPoints((i%3)*200+10);
//            b.setIcon();
            b.setBounds(10+(i%10)*100,(i/10)*60,89,49);
            bp.add(b);
        } 
       
        platform = new JLabel(new ImageIcon(getClass().getResource("/resources/platform.PNG")));
        platform.setBounds(500, 550, 200,40);
        bp.add(platform);
      //  bgPanel.add(bp);
     //   bgPanel.add(platform);
  /*      if (bp.intersects(platform)){
        bp.getY()=-bp.getY();
        }
     */   
//        this.add(bgPanel);
        getContentPane().add(bp);      
       addKeyListener(this);
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1009, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 602, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
         SwingUtilities.invokeLater(() -> {
        JFrame frame = new JFrame("Bouncing Ball");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Game game = new Game();
        game.setVisible(true);
    });
    }
     
     
    @Override
    public void keyTyped(KeyEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    

    @Override
    public void keyPressed(KeyEvent e) {
        int key=e.getKeyCode();
        if (key == KeyEvent.VK_LEFT){
            movePlatformLeft();
        } else if (key== KeyEvent.VK_RIGHT){
             movePlatformRight();
        }
    }

    private void movePlatformLeft(){
     
        platform.setLocation(platform.getX()-15,platform.getY());
        
    }
    
     private void movePlatformRight(){
        platform.setLocation(platform.getX()+15,platform.getY());
    }
     
    @Override
    public void keyReleased(KeyEvent e) {
        
       int key=e.getKeyCode();
              //  platformMove(evt.); 
       if (key== KeyEvent.VK_LEFT){
           movePlatformLeft();
        } else if (key== KeyEvent.VK_RIGHT){
             movePlatformRight();
       }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
